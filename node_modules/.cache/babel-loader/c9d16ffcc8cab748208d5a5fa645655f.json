{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trybewallet/src/components/Form.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { expenses } from '../actions';\nimport requestCurrencies from '../Fetch';\nconst ALIMENTACAO = 'Alimentação';\nconst INITIAL_STATE = {\n  id: 0,\n  value: 0,\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: ALIMENTACAO\n};\nconst metodos = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst categorias = [ALIMENTACAO, 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\nexport class Form extends Component {\n  constructor() {\n    super();\n    this.state = { ...INITIAL_STATE,\n      exchangeRates: {},\n      keys: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  handleChange(_ref) {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleClick(forms) {\n    const {\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates\n    } = this.state;\n    const apiRates = await requestCurrencies();\n    this.setState({\n      id: id + 1,\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: ALIMENTACAO,\n      exchangeRates: apiRates\n    });\n    forms({\n      id,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates\n    });\n  }\n\n  async fetchApi() {\n    const exchangeRates = await requestCurrencies();\n    const keys = Object.keys(exchangeRates);\n    this.setState({\n      keys,\n      exchangeRates\n    });\n  }\n\n  render() {\n    const {\n      forms\n    } = this.props;\n    const {\n      keys,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates\n    } = this.state;\n    console.log(exchangeRates);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      value: value,\n      onChange: this.handleChange,\n      type: \"number\",\n      \"data-testid\": \"value-input\",\n      id: \"value\",\n      name: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      value: description,\n      onChange: this.handleChange,\n      type: \"text\",\n      \"data-testid\": \"description-input\",\n      id: \"description\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      value: currency,\n      onChange: this.handleChange,\n      \"data-testid\": \"currency-input\",\n      name: \"currency\",\n      id: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, keys.filter(moeda => moeda !== 'USDT').map(moeda => /*#__PURE__*/React.createElement(\"option\", {\n      key: moeda,\n      value: `${[moeda]}`,\n      \"data-testid\": [moeda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, moeda)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de Pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      value: method,\n      onChange: this.handleChange,\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      id: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, metodos.map(metodo => /*#__PURE__*/React.createElement(\"option\", {\n      key: metodo,\n      value: metodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, metodo)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, \"Categoria:\", /*#__PURE__*/React.createElement(\"select\", {\n      value: tag,\n      onChange: this.handleChange,\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      id: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, categorias.map(categoria => /*#__PURE__*/React.createElement(\"option\", {\n      key: categoria,\n      value: categoria,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, categoria)))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.handleClick(forms),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  forms: state => dispatch(expenses(state))\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\nForm.propTypes = {\n  forms: PropTypes.instanceOf(Object).isRequired\n};","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trybewallet/src/components/Form.js"],"names":["React","Component","PropTypes","connect","expenses","requestCurrencies","ALIMENTACAO","INITIAL_STATE","id","value","description","currency","method","tag","metodos","categorias","Form","constructor","state","exchangeRates","keys","handleChange","bind","handleClick","componentDidMount","fetchApi","target","name","setState","forms","apiRates","Object","render","props","console","log","filter","moeda","map","metodo","categoria","mapDispatchToProps","dispatch","propTypes","instanceOf","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,iBAAP,MAA8B,UAA9B;AAEA,MAAMC,WAAW,GAAG,aAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,EAAE,EAAE,CADgB;AAEpBC,EAAAA,KAAK,EAAE,CAFa;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAIpBC,EAAAA,QAAQ,EAAE,KAJU;AAKpBC,EAAAA,MAAM,EAAE,UALY;AAMpBC,EAAAA,GAAG,EAAEP;AANe,CAAtB;AASA,MAAMQ,OAAO,GAAG,CAAC,UAAD,EAAa,mBAAb,EAAkC,kBAAlC,CAAhB;AACA,MAAMC,UAAU,GAAG,CAACT,WAAD,EAAc,OAAd,EAAuB,UAAvB,EAAmC,YAAnC,EAAiD,OAAjD,CAAnB;AAEA,OAAO,MAAMU,IAAN,SAAmBf,SAAnB,CAA6B;AAClCgB,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa,EACX,GAAGX,aADQ;AAEXY,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL;AACD;;AAEDJ,EAAAA,YAAY,OAA8B;AAAA,QAA7B;AAAEK,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAF;AAAQlB,QAAAA;AAAR;AAAV,KAA6B;AACxC,SAAKmB,QAAL,CAAc;AACZ,OAACD,IAAD,GAAQlB;AADI,KAAd;AAGD;;AAEgB,QAAXc,WAAW,CAACM,KAAD,EAAQ;AACvB,UAAM;AAAErB,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,WAAb;AAA0BC,MAAAA,QAA1B;AAAoCC,MAAAA,MAApC;AAA4CC,MAAAA,GAA5C;AAAiDM,MAAAA;AAAjD,QAAmE,KAAKD,KAA9E;AACA,UAAMY,QAAQ,GAAG,MAAMzB,iBAAiB,EAAxC;AACA,SAAKuB,QAAL,CAAc;AACZpB,MAAAA,EAAE,EAAEA,EAAE,GAAG,CADG;AAEZC,MAAAA,KAAK,EAAE,CAFK;AAGZC,MAAAA,WAAW,EAAE,EAHD;AAIZC,MAAAA,QAAQ,EAAE,KAJE;AAKZC,MAAAA,MAAM,EAAE,UALI;AAMZC,MAAAA,GAAG,EAAEP,WANO;AAOZa,MAAAA,aAAa,EAAEW;AAPH,KAAd;AASAD,IAAAA,KAAK,CAAC;AAAErB,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,WAAb;AAA0BC,MAAAA,QAA1B;AAAoCC,MAAAA,MAApC;AAA4CC,MAAAA,GAA5C;AAAiDM,MAAAA;AAAjD,KAAD,CAAL;AACD;;AAEa,QAARM,QAAQ,GAAG;AACf,UAAMN,aAAa,GAAG,MAAMd,iBAAiB,EAA7C;AACA,UAAMe,IAAI,GAAGW,MAAM,CAACX,IAAP,CAAYD,aAAZ,CAAb;AACA,SAAKS,QAAL,CAAc;AACZR,MAAAA,IADY;AAEZD,MAAAA;AAFY,KAAd;AAID;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA;AAAF,QAAY,KAAKI,KAAvB;AACA,UAAM;AACJb,MAAAA,IADI;AAEJX,MAAAA,KAFI;AAGJC,MAAAA,WAHI;AAIJC,MAAAA,QAJI;AAKJC,MAAAA,MALI;AAMJC,MAAAA,GANI;AAOJM,MAAAA;AAPI,QAQF,KAAKD,KART;AASAgB,IAAAA,OAAO,CAACC,GAAR,CAAYhB,aAAZ;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,MAAA,KAAK,EAAGV,KADV;AAEE,MAAA,QAAQ,EAAG,KAAKY,YAFlB;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,qBAAY,aAJd;AAKE,MAAA,EAAE,EAAC,OALL;AAME,MAAA,IAAI,EAAC,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAaE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AACE,MAAA,KAAK,EAAGX,WADV;AAEE,MAAA,QAAQ,EAAG,KAAKW,YAFlB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,qBAAY,mBAJd;AAKE,MAAA,EAAE,EAAC,aALL;AAME,MAAA,IAAI,EAAC,aANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAbF,eAyBE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,MAAA,KAAK,EAAGV,QADV;AAEE,MAAA,QAAQ,EAAG,KAAKU,YAFlB;AAGE,qBAAY,gBAHd;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,EAAE,EAAC,UALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQID,IAAI,CAACgB,MAAL,CAAaC,KAAD,IAAWA,KAAK,KAAK,MAAjC,EACGC,GADH,CACQD,KAAD,iBACH;AACE,MAAA,GAAG,EAAGA,KADR;AAEE,MAAA,KAAK,EAAI,GAAE,CAACA,KAAD,CAAQ,EAFrB;AAGE,qBAAc,CAACA,KAAD,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,KALH,CAFJ,CARJ,CAFF,CAzBF,eAgDE;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEE;AACE,MAAA,KAAK,EAAGzB,MADV;AAEE,MAAA,QAAQ,EAAG,KAAKS,YAFlB;AAGE,qBAAY,cAHd;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,EAAE,EAAC,QALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQIP,OAAO,CAACwB,GAAR,CAAaC,MAAD,iBACV;AACE,MAAA,GAAG,EAAGA,MADR;AAEE,MAAA,KAAK,EAAGA,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,MAJH,CADF,CARJ,CAFF,CAhDF,eAsEE;AAAO,MAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AACE,MAAA,KAAK,EAAG1B,GADV;AAEE,MAAA,QAAQ,EAAG,KAAKQ,YAFlB;AAGE,qBAAY,WAHd;AAIE,MAAA,IAAI,EAAC,KAJP;AAKE,MAAA,EAAE,EAAC,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQIN,UAAU,CAACuB,GAAX,CAAgBE,SAAD,iBACb;AACE,MAAA,GAAG,EAAGA,SADR;AAEE,MAAA,KAAK,EAAGA,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,SAJH,CADF,CARJ,CAFF,CAtEF,eA4FE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,MAAM,KAAKjB,WAAL,CAAiBM,KAAjB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA5FF,CADF;AAqGD;;AAlKiC;;AAqKpC,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,KAAK,EAAGX,KAAD,IAAWwB,QAAQ,CAACtC,QAAQ,CAACc,KAAD,CAAT;AADc,CAAf,CAA3B;;AAIA,eAAef,OAAO,CAAC,IAAD,EAAOsC,kBAAP,CAAP,CAAkCzB,IAAlC,CAAf;AAEAA,IAAI,CAAC2B,SAAL,GAAiB;AACfd,EAAAA,KAAK,EAAE3B,SAAS,CAAC0C,UAAV,CAAqBb,MAArB,EAA6Bc;AADrB,CAAjB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { expenses } from '../actions';\nimport requestCurrencies from '../Fetch';\n\nconst ALIMENTACAO = 'Alimentação';\n\nconst INITIAL_STATE = {\n  id: 0,\n  value: 0,\n  description: '',\n  currency: 'USD',\n  method: 'Dinheiro',\n  tag: ALIMENTACAO,\n};\n\nconst metodos = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst categorias = [ALIMENTACAO, 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nexport class Form extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      ...INITIAL_STATE,\n      exchangeRates: {},\n      keys: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchApi();\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  async handleClick(forms) {\n    const { id, value, description, currency, method, tag, exchangeRates } = this.state;\n    const apiRates = await requestCurrencies();\n    this.setState({\n      id: id + 1,\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: ALIMENTACAO,\n      exchangeRates: apiRates,\n    });\n    forms({ id, value, description, currency, method, tag, exchangeRates });\n  }\n\n  async fetchApi() {\n    const exchangeRates = await requestCurrencies();\n    const keys = Object.keys(exchangeRates);\n    this.setState({\n      keys,\n      exchangeRates,\n    });\n  }\n\n  render() {\n    const { forms } = this.props;\n    const {\n      keys,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates\n    } = this.state;\n    console.log(exchangeRates);\n\n    return (\n      <div>\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            value={ value }\n            onChange={ this.handleChange }\n            type=\"number\"\n            data-testid=\"value-input\"\n            id=\"value\"\n            name=\"value\"\n          />\n        </label>\n\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            value={ description }\n            onChange={ this.handleChange }\n            type=\"text\"\n            data-testid=\"description-input\"\n            id=\"description\"\n            name=\"description\"\n          />\n        </label>\n\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            value={ currency }\n            onChange={ this.handleChange }\n            data-testid=\"currency-input\"\n            name=\"currency\"\n            id=\"currency\"\n          >\n            {\n              keys.filter((moeda) => moeda !== 'USDT')\n                .map((moeda) => (\n                  <option\n                    key={ moeda }\n                    value={ `${[moeda]}` }\n                    data-testid={ [moeda] }\n                  >\n                    {moeda}\n                  </option>))\n            }\n          </select>\n        </label>\n\n        <label htmlFor=\"method\">\n          Método de Pagamento:\n          <select\n            value={ method }\n            onChange={ this.handleChange }\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n          >\n            {\n              metodos.map((metodo) => (\n                <option\n                  key={ metodo }\n                  value={ metodo }\n                >\n                  {metodo}\n                </option>\n              ))\n            }\n          </select>\n        </label>\n\n        <label htmlFor=\"tag\">\n          Categoria:\n          <select\n            value={ tag }\n            onChange={ this.handleChange }\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n          >\n            {\n              categorias.map((categoria) => (\n                <option\n                  key={ categoria }\n                  value={ categoria }\n                >\n                  {categoria}\n                </option>\n              ))\n            }\n          </select>\n        </label>\n\n        <button\n          type=\"button\"\n          onClick={ () => this.handleClick(forms) }\n        >\n          Adicionar despesa\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  forms: (state) => dispatch(expenses(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n\nForm.propTypes = {\n  forms: PropTypes.instanceOf(Object).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}