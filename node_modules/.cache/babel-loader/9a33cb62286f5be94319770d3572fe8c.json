{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trybewallet/src/pages/Wallet.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { currencyAction } from '../actions';\nimport Header from '../components/Header';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchAPI = async () => {\n      const {\n        fetchDispatch\n      } = this.props;\n      const API = 'https://economia.awesomeapi.com.br/json/all';\n      const curr = await fetch(API);\n      const response = await curr.json();\n      fetchDispatch(response);\n    };\n\n    this.handleClick = () => {\n      const {\n        value,\n        description,\n        currency\n      } = this.state;\n\n      if (value !== '' && description !== '' && currency !== '') {\n        const {\n          fetchDispatch\n        } = this.props;\n        let {\n          id\n        } = this.state;\n        fetchDispatch(this.state);\n        this.setState({\n          id: id += 1,\n          value: 0,\n          description: '',\n          currency: '',\n          method: 'Dinheiro',\n          tag: 'Alimentacao'\n        });\n      }\n    };\n\n    this.state = {\n      id: 0,\n      value: 0,\n      description: '',\n      currency: 'USDT',\n      method: 'Dinheiro ',\n      tag: 'alimentacao'\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchAPI();\n  }\n\n  handleChange(_ref) {\n    let {\n      target: {\n        id,\n        value\n      }\n    } = _ref;\n    this.setState({\n      [id]: value\n    });\n  }\n\n  render() {\n    const {\n      wallet\n    } = this.props;\n    const categoryTag = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Valor da despesa\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"value\",\n      name: \"value\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o da despesa\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      name: \"description\",\n      type: \"text\",\n      onChange: this.handleChange,\n      id: \"description\",\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Moeda registrada\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency\",\n      onChange: this.handleChange,\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, wallet.currencies.map(moeda => /*#__PURE__*/React.createElement(\"option\", {\n      key: moeda,\n      value: moeda,\n      \"data-testid\": moeda,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, moeda)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"method\",\n      \"data-testid\": \"method-input\",\n      onChange: this.handleChange,\n      value: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"cartao-de-credito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de Cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"cartao-de-debito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Cart\\xE3o de D\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"categoria\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, \"Tipo de despesa\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"categoria\",\n      onChange: this.handleChange,\n      value: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, categoryTag.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, item)))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDispatch: state => dispatch(currencyAction(state))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\nWallet.propTypes = {\n  wallet: PropTypes.shape({\n    currencies: PropTypes.objectOf(Object).isRequired,\n    expenses: PropTypes.objectOf(Object).isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trybewallet/src/pages/Wallet.js"],"names":["PropTypes","React","connect","currencyAction","Header","Wallet","Component","constructor","fetchAPI","fetchDispatch","props","API","curr","fetch","response","json","handleClick","value","description","currency","state","id","setState","method","tag","bind","handleChange","componentDidMount","target","render","wallet","categoryTag","console","log","currencies","map","moeda","item","mapStateToProps","mapDispatchToProps","dispatch","propTypes","shape","objectOf","Object","isRequired","expenses"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { currencyAction } from '../actions';\nimport Header from '../components/Header';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: 0,\n      description: '',\n      currency: 'USDT',\n      method: 'Dinheiro ',\n      tag: 'alimentacao',\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchAPI();\n  }\n\n  fetchAPI = async () => {\n    const { fetchDispatch } = this.props;\n    const API = 'https://economia.awesomeapi.com.br/json/all';\n    const curr = await fetch(API);\n    const response = await curr.json();\n    fetchDispatch(response);\n  }\n\n  handleClick = () => {\n    const { value, description, currency } = this.state;\n    if (value !== '' && description !== '' && currency !== '') {\n      const { fetchDispatch } = this.props;\n      let { id } = this.state;\n      fetchDispatch(this.state);\n      this.setState({\n        id: id += 1,\n        value: 0,\n        description: '',\n        currency: '',\n        method: 'Dinheiro',\n        tag: 'Alimentacao',\n      });\n    }\n  }\n\n  handleChange({ target: { id, value } }) {\n    this.setState({\n      [id]: value,\n    });\n  }\n\n  render() {\n    const { wallet } = this.props;\n    const categoryTag = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const { value, description, currency, method, tag } = this.state;\n    console.log(this.props);\n    return (\n      <div>\n\n        <Header />\n\n        <form>\n\n          <label htmlFor=\"value\">\n            Valor da despesa\n            <input\n              type=\"number\"\n              id=\"value\"\n              name=\"value\"\n              data-testid=\"value-input\"\n              onChange={ this.handleChange }\n              value={ value }\n            />\n\n          </label>\n          <label htmlFor=\"description\">\n            Descrição da despesa\n            <input\n              data-testid=\"description-input\"\n              name=\"description\"\n              type=\"text\"\n              onChange={ this.handleChange }\n              id=\"description\"\n              value={ description }\n            />\n          </label>\n\n          <label htmlFor=\"currency\">\n            Moeda registrada\n            <select\n              data-testid=\"currency-input\"\n              id=\"currency\"\n              onChange={ this.handleChange }\n              value={ currency }\n            >\n              {wallet.currencies.map((moeda) => (\n                <option\n                  key={ moeda }\n                  value={ moeda }\n                  data-testid={ moeda }\n                >\n                  { moeda }\n                </option>\n              ))}\n            </select>\n          </label>\n\n          <label htmlFor=\"method\">\n            Método de pagamento\n            <select\n              id=\"method\"\n              data-testid=\"method-input\"\n              onChange={ this.handleChange }\n              value={ method }\n            >\n              <option value=\"dinheiro\">Dinheiro</option>\n              <option value=\"cartao-de-credito\">Cartão de Crédito</option>\n              <option value=\"cartao-de-debito\">Cartão de Débito</option>\n            </select>\n          </label>\n\n          <label htmlFor=\"categoria\">\n            Tipo de despesa\n            <select\n              data-testid=\"tag-input\"\n              id=\"categoria\"\n              onChange={ this.handleChange }\n              value={ tag }\n            >\n              {categoryTag.map((item) => (\n                <option key={ item } value={ item }>{item}</option>\n              ))}\n            </select>\n          </label>\n\n          <button\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Adicionar despesa\n          </button>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDispatch: (state) => dispatch(currencyAction(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n\nWallet.propTypes = {\n  wallet: PropTypes.shape({\n    currencies: PropTypes.objectOf(Object).isRequired,\n    expenses: PropTypes.objectOf(Object).isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}