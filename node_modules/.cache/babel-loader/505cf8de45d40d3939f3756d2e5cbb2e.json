{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { userLogin } from '../actions/index';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.userValidate = this.validateUser.bind(this);\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n  }\n\n  onSubmitForm(event) {\n    event.preventDefault();\n    const {\n      loginDispatch,\n      history\n    } = this.props;\n    const {\n      email\n    } = this.state;\n    loginDispatch(email);\n    history.push('/carteira');\n  }\n\n  handleChange(_ref) {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  validateUser(email, password) {\n    const PASSWORD_MAX_LENGTH = 6;\n    return email.includes('@') && email.endsWith('.com') && password.length >= PASSWORD_MAX_LENGTH;\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Login:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      \"data-testid\": \"email-input\",\n      id: \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \"Senha:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      \"data-testid\": \"password-input\",\n      id: \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !this.validateUser(email, password),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  loginDispatch: email => dispatch(userLogin({\n    email\n  }))\n});\n\nconst mapStateToProps = state => ({\n  email: state.user.email\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape([]),\n  loginDispatch: PropTypes.func\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trybewallet/src/pages/Login.js"],"names":["React","connect","PropTypes","userLogin","Login","Component","constructor","props","state","email","password","handleChange","bind","userValidate","validateUser","onSubmitForm","event","preventDefault","loginDispatch","history","push","target","name","value","setState","PASSWORD_MAX_LENGTH","includes","endsWith","length","render","mapDispatchToProps","dispatch","mapStateToProps","user","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { userLogin } from '../actions/index';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.userValidate = this.validateUser.bind(this);\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n  }\n\n  onSubmitForm(event) {\n    event.preventDefault();\n    const { loginDispatch, history } = this.props;\n    const { email } = this.state;\n    loginDispatch(email);\n    history.push('/carteira');\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  validateUser(email, password) {\n    const PASSWORD_MAX_LENGTH = 6;\n    return (\n      email.includes('@') && email.endsWith('.com')\n      && password.length >= PASSWORD_MAX_LENGTH\n    );\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <form onSubmit={ this.onSubmitForm }>\n          <label htmlFor=\"email-input\">\n            Login:\n            <input\n              type=\"text\"\n              name=\"email\"\n              value={ email }\n              onChange={ this.handleChange }\n              data-testid=\"email-input\"\n              id=\"email-input\"\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Senha:\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={ password }\n              onChange={ this.handleChange }\n              data-testid=\"password-input\"\n              id=\"password-input\"\n            />\n          </label>\n          <button\n            type=\"submit\"\n            disabled={ !this.validateUser(email, password) }\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginDispatch: (email) => dispatch(userLogin({ email })),\n});\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n});\n\nLogin.propTypes = {\n  history: PropTypes.shape([]),\n  loginDispatch: PropTypes.func,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}