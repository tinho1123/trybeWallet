{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trybewallet/src/pages/Wallet.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { currencyAction, walletAction } from '../actions';\nimport Header from '../components/Header';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchDispatchAPI = async () => {\n      const {\n        fetchDispatch\n      } = this.props;\n      const json = await this.fetchAPI(res => res.json());\n      fetchDispatch(json);\n    };\n\n    this.fetchAPI = async () => {\n      const API = 'https://economia.awesomeapi.com.br/json/all';\n      const curr = await fetch(API);\n      const response = await curr.json();\n      return response;\n    };\n\n    this.handleClick = async () => {\n      const {\n        value,\n        description,\n        currency\n      } = this.state;\n      const {\n        walletActionDispatch\n      } = this.props;\n\n      if (value !== '' && description !== '' && currency !== '') {\n        let {\n          id\n        } = this.state;\n        const json = await this.fetchAPI(response => response.json());\n        walletActionDispatch(this.state, json);\n        this.setState({\n          id: id += 1,\n          value: 0,\n          description: '',\n          currency: '',\n          method: 'Dinheiro',\n          tag: 'Alimentacao'\n        });\n      }\n    };\n\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USDT',\n      method: 'Dinheiro ',\n      tag: 'alimentacao'\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDispatchAPI();\n  }\n\n  handleChange(_ref) {\n    let {\n      target: {\n        id,\n        value\n      }\n    } = _ref;\n    this.setState({\n      [id]: value\n    });\n  }\n\n  render() {\n    const {\n      wallet\n    } = this.props;\n    const categoryTag = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const paypal = ['Dinheiro', 'Cartão de Débito', 'Cartão de Crédito'];\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \"Valor da despesa\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"value\",\n      name: \"value\",\n      \"data-testid\": \"value-input\",\n      onChange: this.handleChange,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Descri\\xE7\\xE3o da despesa\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      name: \"description\",\n      type: \"text\",\n      onChange: this.handleChange,\n      id: \"description\",\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Moeda registrada\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency\",\n      onChange: this.handleChange,\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, wallet.currencies.filter(moeda => moeda !== 'USDT').map(moeda => /*#__PURE__*/React.createElement(\"option\", {\n      key: moeda,\n      value: moeda,\n      \"data-testid\": moeda,\n      id: moeda,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, moeda)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, \"M\\xE9todo de pagamento\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"method\",\n      \"data-testid\": \"method-input\",\n      onChange: this.handleChange,\n      value: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, paypal.map(pagamento => /*#__PURE__*/React.createElement(\"option\", {\n      key: pagamento,\n      value: pagamento,\n      \"data-testid\": pagamento,\n      id: pagamento,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, pagamento)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"categoria\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Tipo de despesa\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"categoria\",\n      onChange: this.handleChange,\n      value: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, categoryTag.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      key: item,\n      value: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, item)))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  wallet: state.wallet\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDispatch: state => dispatch(currencyAction(state)),\n  walletActionDispatch: state => dispatch(walletAction(state))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\nWallet.propTypes = {\n  walletActionDispatch: PropTypes.func.isRequired,\n  fetchDispatch: PropTypes.func.isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.objectOf().isRequired,\n    expenses: PropTypes.objectOf().isRequired\n  }).isRequired\n};","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trybewallet/src/pages/Wallet.js"],"names":["PropTypes","React","connect","currencyAction","walletAction","Header","Wallet","Component","constructor","fetchDispatchAPI","fetchDispatch","props","json","fetchAPI","res","API","curr","fetch","response","handleClick","value","description","currency","state","walletActionDispatch","id","setState","method","tag","bind","handleChange","componentDidMount","target","render","wallet","categoryTag","paypal","console","log","currencies","filter","moeda","map","pagamento","item","mapStateToProps","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape","objectOf","expenses"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,YAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAmBdC,gBAnBc,GAmBK,YAAY;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAoB,KAAKC,KAA/B;AACA,YAAMC,IAAI,GAAG,MAAM,KAAKC,QAAL,CAAeC,GAAD,IAASA,GAAG,CAACF,IAAJ,EAAvB,CAAnB;AACAF,MAAAA,aAAa,CAACE,IAAD,CAAb;AACD,KAvBa;;AAAA,SAyBdC,QAzBc,GAyBH,YAAY;AACrB,YAAME,GAAG,GAAG,6CAAZ;AACA,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB;AACA,YAAMG,QAAQ,GAAG,MAAMF,IAAI,CAACJ,IAAL,EAAvB;AACA,aAAOM,QAAP;AACD,KA9Ba;;AAAA,SAgCdC,WAhCc,GAgCA,YAAY;AACxB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,WAAT;AAAsBC,QAAAA;AAAtB,UAAmC,KAAKC,KAA9C;AACA,YAAM;AAAEC,QAAAA;AAAF,UAA2B,KAAKb,KAAtC;;AACA,UAAIS,KAAK,KAAK,EAAV,IAAgBC,WAAW,KAAK,EAAhC,IAAsCC,QAAQ,KAAK,EAAvD,EAA2D;AACzD,YAAI;AAAEG,UAAAA;AAAF,YAAS,KAAKF,KAAlB;AACA,cAAMX,IAAI,GAAG,MAAM,KAAKC,QAAL,CAAeK,QAAD,IAAcA,QAAQ,CAACN,IAAT,EAA5B,CAAnB;AACAY,QAAAA,oBAAoB,CAAC,KAAKD,KAAN,EAAaX,IAAb,CAApB;AACA,aAAKc,QAAL,CAAc;AACZD,UAAAA,EAAE,EAAEA,EAAE,IAAI,CADE;AAEZL,UAAAA,KAAK,EAAE,CAFK;AAGZC,UAAAA,WAAW,EAAE,EAHD;AAIZC,UAAAA,QAAQ,EAAE,EAJE;AAKZK,UAAAA,MAAM,EAAE,UALI;AAMZC,UAAAA,GAAG,EAAE;AANO,SAAd;AAQD;AACF,KAhDa;;AAEZ,SAAKL,KAAL,GAAa;AACXE,MAAAA,EAAE,EAAE,CADO;AAEXL,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIXC,MAAAA,QAAQ,EAAE,MAJC;AAKXK,MAAAA,MAAM,EAAE,WALG;AAMXC,MAAAA,GAAG,EAAE;AANM,KAAb;AASA,SAAKT,WAAL,GAAmB,KAAKA,WAAL,CAAiBU,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKtB,gBAAL;AACD;;AAiCDqB,EAAAA,YAAY,OAA4B;AAAA,QAA3B;AAAEE,MAAAA,MAAM,EAAE;AAAEP,QAAAA,EAAF;AAAML,QAAAA;AAAN;AAAV,KAA2B;AACtC,SAAKM,QAAL,CAAc;AACZ,OAACD,EAAD,GAAML;AADM,KAAd;AAGD;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKvB,KAAxB;AACA,UAAMwB,WAAW,GAAG,CAAC,aAAD,EAAgB,OAAhB,EAAyB,UAAzB,EAAqC,YAArC,EAAmD,OAAnD,CAApB;AACA,UAAMC,MAAM,GAAG,CAAC,UAAD,EAAa,kBAAb,EAAiC,mBAAjC,CAAf;AACA,UAAM;AAAEhB,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA,QAAtB;AAAgCK,MAAAA,MAAhC;AAAwCC,MAAAA;AAAxC,QAAgD,KAAKL,KAA3D;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAjB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,qBAAY,aAJd;AAKE,MAAA,QAAQ,EAAG,KAAKmB,YALlB;AAME,MAAA,KAAK,EAAGV,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,eAcE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAEE;AACE,qBAAY,mBADd;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,QAAQ,EAAG,KAAKU,YAJlB;AAKE,MAAA,EAAE,EAAC,aALL;AAME,MAAA,KAAK,EAAGT,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdF,eA0BE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AACE,qBAAY,gBADd;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,QAAQ,EAAG,KAAKS,YAHlB;AAIE,MAAA,KAAK,EAAGR,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGY,MAAM,CAACK,UAAP,CAAkBC,MAAlB,CAA0BC,KAAD,IAAWA,KAAK,KAAK,MAA9C,EAAsDC,GAAtD,CAA2DD,KAAD,iBACzD;AACE,MAAA,GAAG,EAAGA,KADR;AAEE,MAAA,KAAK,EAAGA,KAFV;AAGE,qBAAcA,KAHhB;AAIE,MAAA,EAAE,EAAGA,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMIA,KANJ,CADD,CANH,CAFF,CA1BF,eA+CE;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,qBAAY,cAFd;AAGE,MAAA,QAAQ,EAAG,KAAKX,YAHlB;AAIE,MAAA,KAAK,EAAGH,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGS,MAAM,CAACM,GAAP,CAAYC,SAAD,iBACV;AACE,MAAA,GAAG,EAAGA,SADR;AAEE,MAAA,KAAK,EAAGA,SAFV;AAGE,qBAAcA,SAHhB;AAIE,MAAA,EAAE,EAAGA,SAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGA,SANH,CADD,CANH,CAFF,CA/CF,eAoEE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEE;AACE,qBAAY,WADd;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,QAAQ,EAAG,KAAKb,YAHlB;AAIE,MAAA,KAAK,EAAGF,GAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGO,WAAW,CAACO,GAAZ,CAAiBE,IAAD,iBACf;AAAQ,MAAA,GAAG,EAAGA,IAAd;AAAqB,MAAA,KAAK,EAAGA,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,IAArC,CADD,CANH,CAFF,CApEF,eAkFE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAG,KAAKzB,WAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAlFF,CAJF,CADF;AAiGD;;AAhKkC;;AAmKrC,MAAM0B,eAAe,GAAItB,KAAD,KAAY;AAClCW,EAAAA,MAAM,EAAEX,KAAK,CAACW;AADoB,CAAZ,CAAxB;;AAIA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCrC,EAAAA,aAAa,EAAGa,KAAD,IAAWwB,QAAQ,CAAC5C,cAAc,CAACoB,KAAD,CAAf,CADM;AAExCC,EAAAA,oBAAoB,EAAGD,KAAD,IAAWwB,QAAQ,CAAC3C,YAAY,CAACmB,KAAD,CAAb;AAFD,CAAf,CAA3B;;AAKA,eAAerB,OAAO,CAAC2C,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CxC,MAA7C,CAAf;AAEAA,MAAM,CAAC0C,SAAP,GAAmB;AACjBxB,EAAAA,oBAAoB,EAAExB,SAAS,CAACiD,IAAV,CAAeC,UADpB;AAEjBxC,EAAAA,aAAa,EAAEV,SAAS,CAACiD,IAAV,CAAeC,UAFb;AAGjBhB,EAAAA,MAAM,EAAElC,SAAS,CAACmD,KAAV,CAAgB;AACtBZ,IAAAA,UAAU,EAAEvC,SAAS,CAACoD,QAAV,GAAqBF,UADX;AAEtBG,IAAAA,QAAQ,EAAErD,SAAS,CAACoD,QAAV,GAAqBF;AAFT,GAAhB,EAGLA;AANc,CAAnB","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { currencyAction, walletAction } from '../actions';\nimport Header from '../components/Header';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USDT',\n      method: 'Dinheiro ',\n      tag: 'alimentacao',\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDispatchAPI();\n  }\n\n  fetchDispatchAPI = async () => {\n    const { fetchDispatch } = this.props;\n    const json = await this.fetchAPI((res) => res.json());\n    fetchDispatch(json);\n  }\n\n  fetchAPI = async () => {\n    const API = 'https://economia.awesomeapi.com.br/json/all';\n    const curr = await fetch(API);\n    const response = await curr.json();\n    return response;\n  }\n\n  handleClick = async () => {\n    const { value, description, currency } = this.state;\n    const { walletActionDispatch } = this.props;\n    if (value !== '' && description !== '' && currency !== '') {\n      let { id } = this.state;\n      const json = await this.fetchAPI((response) => response.json());\n      walletActionDispatch(this.state, json);\n      this.setState({\n        id: id += 1,\n        value: 0,\n        description: '',\n        currency: '',\n        method: 'Dinheiro',\n        tag: 'Alimentacao',\n      });\n    }\n  }\n\n  handleChange({ target: { id, value } }) {\n    this.setState({\n      [id]: value,\n    });\n  }\n\n  render() {\n    const { wallet } = this.props;\n    const categoryTag = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    const paypal = ['Dinheiro', 'Cartão de Débito', 'Cartão de Crédito'];\n    const { value, description, currency, method, tag } = this.state;\n    console.log(this.props);\n    return (\n      <div>\n\n        <Header />\n\n        <form>\n\n          <label htmlFor=\"value\">\n            Valor da despesa\n            <input\n              type=\"number\"\n              id=\"value\"\n              name=\"value\"\n              data-testid=\"value-input\"\n              onChange={ this.handleChange }\n              value={ value }\n            />\n\n          </label>\n          <label htmlFor=\"description\">\n            Descrição da despesa\n            <input\n              data-testid=\"description-input\"\n              name=\"description\"\n              type=\"text\"\n              onChange={ this.handleChange }\n              id=\"description\"\n              value={ description }\n            />\n          </label>\n\n          <label htmlFor=\"currency\">\n            Moeda registrada\n            <select\n              data-testid=\"currency-input\"\n              id=\"currency\"\n              onChange={ this.handleChange }\n              value={ currency }\n            >\n              {wallet.currencies.filter((moeda) => moeda !== 'USDT').map((moeda) => (\n                <option\n                  key={ moeda }\n                  value={ moeda }\n                  data-testid={ moeda }\n                  id={ moeda }\n                >\n                  { moeda }\n                </option>\n              ))}\n            </select>\n          </label>\n\n          <label htmlFor=\"method\">\n            Método de pagamento\n            <select\n              id=\"method\"\n              data-testid=\"method-input\"\n              onChange={ this.handleChange }\n              value={ method }\n            >\n              {paypal.map((pagamento) => (\n                <option\n                  key={ pagamento }\n                  value={ pagamento }\n                  data-testid={ pagamento }\n                  id={ pagamento }\n                >\n                  {pagamento}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          <label htmlFor=\"categoria\">\n            Tipo de despesa\n            <select\n              data-testid=\"tag-input\"\n              id=\"categoria\"\n              onChange={ this.handleChange }\n              value={ tag }\n            >\n              {categoryTag.map((item) => (\n                <option key={ item } value={ item }>{item}</option>\n              ))}\n            </select>\n          </label>\n\n          <button\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            Adicionar despesa\n          </button>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  wallet: state.wallet,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDispatch: (state) => dispatch(currencyAction(state)),\n  walletActionDispatch: (state) => dispatch(walletAction(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n\nWallet.propTypes = {\n  walletActionDispatch: PropTypes.func.isRequired,\n  fetchDispatch: PropTypes.func.isRequired,\n  wallet: PropTypes.shape({\n    currencies: PropTypes.objectOf().isRequired,\n    expenses: PropTypes.objectOf().isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}