{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { GET_CURRENCY, REQUEST_CURRENCY, WALLET_ACTION } from '../actions';\nconst INITIAL_STATE = {\n  isFetching: false,\n  currencies: [],\n  expenses: []\n};\n\nconst walletReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_CURRENCY:\n      return { ...state,\n        isFetching: true\n      };\n\n    case GET_CURRENCY:\n      return { ...state,\n        isFetching: false,\n        currencies: [...state.currencies, ...action.currencies]\n      };\n\n    case WALLET_ACTION:\n      return { ...state,\n        expenses: [...state.expenses, { ...action.expenses,\n          exchangeRates: action.exchangeRates\n        }],\n        isFetching: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default walletReducer;","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trybewallet/src/reducers/wallet.js"],"names":["GET_CURRENCY","REQUEST_CURRENCY","WALLET_ACTION","INITIAL_STATE","isFetching","currencies","expenses","walletReducer","state","action","type","exchangeRates"],"mappings":"AAAA;AAEA,SAASA,YAAT,EAAuBC,gBAAvB,EAAyCC,aAAzC,QAA8D,YAA9D;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,KADQ;AAEpBC,EAAAA,UAAU,EAAE,EAFQ;AAGpBC,EAAAA,QAAQ,EAAE;AAHU,CAAtB;;AAMA,MAAMC,aAAa,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BL,aAA0B;AAAA,MAAXM,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKT,gBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKJ,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,UAAU,EAAE,CAAC,GAAGG,KAAK,CAACH,UAAV,EAAsB,GAAGI,MAAM,CAACJ,UAAhC;AAHP,OAAP;;AAKF,SAAKH,aAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EACR,EAAE,GAAGG,MAAM,CAACH,QAAZ;AAAsBK,UAAAA,aAAa,EAAEF,MAAM,CAACE;AAA5C,SADQ,CAFL;AAILP,QAAAA,UAAU,EAAE;AAJP,OAAP;;AAOF;AACE,aAAOI,KAAP;AArBF;AAuBD,CAxBD;;AA0BA,eAAeD,aAAf","sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nimport { GET_CURRENCY, REQUEST_CURRENCY, WALLET_ACTION } from '../actions';\n\nconst INITIAL_STATE = {\n  isFetching: false,\n  currencies: [],\n  expenses: [],\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_CURRENCY:\n    return {\n      ...state,\n      isFetching: true,\n    };\n  case GET_CURRENCY:\n    return {\n      ...state,\n      isFetching: false,\n      currencies: [...state.currencies, ...action.currencies],\n    };\n  case WALLET_ACTION:\n    return {\n      ...state,\n      expenses: [...state.expenses,\n        { ...action.expenses, exchangeRates: action.exchangeRates }],\n      isFetching: false,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}