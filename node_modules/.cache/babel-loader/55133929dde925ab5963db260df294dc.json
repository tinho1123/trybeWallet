{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { GET_CURRENCY, WALLET_ACTION } from '../actions';\nconst INITIAL_STATE = {\n  isFetching: false,\n  currencies: [],\n  expenses: [],\n  valorTotal: 0\n};\n\nconst walletReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_CURRENCY:\n      return { ...state,\n        isFetching: false,\n        currencies: action.payload\n      };\n\n    case WALLET_ACTION:\n      return { ...state,\n        expenses: action.payload,\n        valorTotal: Number(state.valorTotal) + Number(action.payload.value) * Number(Object.values(state.currencies).filter(curry => curry === action.expenses[0].currency).ask),\n        isFetching: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default walletReducer;","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trybewallet/src/reducers/wallet.js"],"names":["GET_CURRENCY","WALLET_ACTION","INITIAL_STATE","isFetching","currencies","expenses","valorTotal","walletReducer","state","action","type","payload","Number","value","Object","values","filter","curry","currency","ask"],"mappings":"AAAA;AAEA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,YAA5C;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,KADQ;AAEpBC,EAAAA,UAAU,EAAE,EAFQ;AAGpBC,EAAAA,QAAQ,EAAE,EAHU;AAIpBC,EAAAA,UAAU,EAAE;AAJQ,CAAtB;;AAOA,MAAMC,aAAa,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BN,aAA0B;AAAA,MAAXO,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKV,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAHd,OAAP;;AAMF,SAAKV,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAFZ;AAGLL,QAAAA,UAAU,EAAEM,MAAM,CAACJ,KAAK,CAACF,UAAP,CAAN,GACTM,MAAM,CAACH,MAAM,CAACE,OAAP,CAAeE,KAAhB,CAAN,GACDD,MAAM,CAACE,MAAM,CAACC,MAAP,CAAcP,KAAK,CAACJ,UAApB,EACNY,MADM,CACEC,KAAD,IAAWA,KAAK,KAAKR,MAAM,CAACJ,QAAP,CAAgB,CAAhB,EAAmBa,QADzC,EACmDC,GADpD,CALH;AAOLhB,QAAAA,UAAU,EAAE;AAPP,OAAP;;AAUF;AACE,aAAOK,KAAP;AApBF;AAsBD,CAvBD;;AAyBA,eAAeD,aAAf","sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nimport { GET_CURRENCY, WALLET_ACTION } from '../actions';\n\nconst INITIAL_STATE = {\n  isFetching: false,\n  currencies: [],\n  expenses: [],\n  valorTotal: 0,\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_CURRENCY:\n    return {\n      ...state,\n      isFetching: false,\n      currencies: action.payload,\n    };\n\n  case WALLET_ACTION:\n    return {\n      ...state,\n      expenses: action.payload,\n      valorTotal: Number(state.valorTotal)\n      + (Number(action.payload.value)\n      * Number(Object.values(state.currencies)\n        .filter((curry) => curry === action.expenses[0].currency).ask)),\n      isFetching: false,\n    };\n\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}