{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trybewallet/src/pages/Login.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setUser } from '../store/actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.emailValidation = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      const tamanhoDaSenha = 6;\n      const validarEmail = /\\S+@\\S+\\.\\S+/.test(email);\n      const validarSenha = password.length < tamanhoDaSenha;\n      return !validarEmail || validarSenha;\n    };\n\n    this.handleClick = () => {\n      const {\n        history,\n        dispatchSetValue\n      } = this.props;\n      const {\n        email\n      } = this.state;\n      dispatchSetValue(email);\n      history.push('/wallet');\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.emailValidation = this.emailValidation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Digite seu email:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email-input\",\n      name: \"email\",\n      type: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      \"data-testid\": \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Digite sua senha:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"password-input\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      \"data-testid\": \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: this.validarEmail(),\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Entrar\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSetValue: value => dispatch(setUser(value))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\nLogin.propTypes = {\n  dispatchSetValue: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};","map":{"version":3,"sources":["/home/wellington/Área de Trabalho/projects/sd-016-b-project-trybewallet/src/pages/Login.js"],"names":["PropTypes","React","connect","setUser","Login","Component","constructor","emailValidation","email","password","state","tamanhoDaSenha","validarEmail","test","validarSenha","length","handleClick","history","dispatchSetValue","props","push","handleChange","target","name","value","setState","bind","render","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setUser } from '../store/actions';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.emailValidation = this.emailValidation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  emailValidation = () => {\n    const { email, password } = this.state;\n    const tamanhoDaSenha = 6;\n    const validarEmail = (/\\S+@\\S+\\.\\S+/).test(email);\n    const validarSenha = password.length < tamanhoDaSenha;\n    return !validarEmail || validarSenha;\n  }\n\n  handleClick = () => {\n    const { history, dispatchSetValue } = this.props;\n    const { email } = this.state;\n    dispatchSetValue(email);\n    history.push('/wallet');\n  }\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <form>\n        <label htmlFor=\"email-input\">\n          Digite seu email:\n          <input\n            id=\"email-input\"\n            name=\"email\"\n            type=\"email\"\n            value={ email }\n            onChange={ this.handleChange }\n            data-testid=\"email-input\"\n          />\n        </label>\n        <label htmlFor=\"password-input\">\n          Digite sua senha:\n          <input\n            id=\"password-input\"\n            name=\"password\"\n            type=\"password\"\n            value={ password }\n            onChange={ this.handleChange }\n            data-testid=\"password-input\"\n          />\n        </label>\n\n        <button\n          type=\"button\"\n          disabled={ this.validarEmail() }\n          onClick={ this.handleClick }\n        >\n          Entrar\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSetValue: (value) => dispatch(setUser(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  dispatchSetValue: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}