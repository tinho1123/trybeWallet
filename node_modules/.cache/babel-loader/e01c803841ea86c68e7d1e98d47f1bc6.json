{"ast":null,"code":"var _jsxFileName = \"/home/wellington/\\xC1rea de Trabalho/projects/sd-016-b-project-trybewallet/src/components/Tables.js\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeCost, showEditForm } from '../actions';\nimport EditForm from './EditForm';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      curExpenses: []\n    };\n  }\n\n  render() {\n    const {\n      costs,\n      deleteCost,\n      showForm,\n      isFormEditOn\n    } = this.props;\n    const {\n      curExpenses\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, showForm && /*#__PURE__*/React.createElement(EditForm, {\n      data: curExpenses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, \"Editar/Excluir\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, costs.map(cost => {\n      const {\n        value,\n        description,\n        currency,\n        method,\n        tag,\n        exchangeRates,\n        id\n      } = cost;\n      const rateObj = Object.values(exchangeRates).find(rate => rate.code === currency);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, tag), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, method), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, value), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, rateObj.name.split('/')[0]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, Number(rateObj.ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, (value * Number(rateObj.ask)).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, rateObj.name.split('/')[1]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"edit-btn\",\n        onClick: () => this.setState({\n          curExpenses: cost\n        }, () => showForm()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, \"Editar despesa\"), /*#__PURE__*/React.createElement(\"button\", {\n        \"data-testid\": \"delete-btn\",\n        onClick: () => {\n          deleteCost(id);\n        },\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 23\n        }\n      }, \"X\")));\n    }))));\n  }\n\n}\n\nTable.propTypes = {\n  costs: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteCost: PropTypes.func.isRequired,\n  isFormEditOn: PropTypes.bool.isRequired,\n  showForm: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  costs: state.wallet.expenses,\n  isFormEditOn: state.wallet.editForm\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteCost: id => dispatch(removeCost(id)),\n  showForm: () => dispatch(showEditForm())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","map":{"version":3,"sources":["/home/wellington/√Årea de Trabalho/projects/sd-016-b-project-trybewallet/src/components/Tables.js"],"names":["PropTypes","React","Component","connect","removeCost","showEditForm","EditForm","Table","constructor","props","state","curExpenses","render","costs","deleteCost","showForm","isFormEditOn","map","cost","value","description","currency","method","tag","exchangeRates","id","rateObj","Object","values","find","rate","code","name","split","Number","ask","toFixed","setState","propTypes","arrayOf","object","isRequired","func","bool","mapStateToProps","wallet","expenses","editForm","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeCost, showEditForm } from '../actions';\nimport EditForm from './EditForm';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curExpenses: [],\n    };\n  }\n\n  render() {\n    const { costs, deleteCost, showForm, isFormEditOn } = this.props;\n    const { curExpenses } = this.state;\n    return (\n      <div>\n        { showForm && <EditForm data={ curExpenses } />}\n\n        <table>\n          <thead>\n            <tr>\n              <th>Descri√ß√£o</th>\n              <th>Tag</th>\n              <th>M√©todo de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>C√¢mbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de convers√£o</th>\n              <th>Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              costs.map((cost) => {\n                const {\n                  value, description, currency, method, tag, exchangeRates, id,\n                } = cost;\n                const rateObj = Object\n                  .values(exchangeRates)\n                  .find((rate) => rate.code === currency);\n                return (\n                  <tr key={ id }>\n                    <td>{description}</td>\n                    <td>{tag}</td>\n                    <td>{method}</td>\n                    <td>{value}</td>\n                    <td>{rateObj.name.split('/')[0]}</td>\n                    <td>{Number(rateObj.ask).toFixed(2)}</td>\n                    <td>{(value * Number(rateObj.ask)).toFixed(2)}</td>\n                    <td>{rateObj.name.split('/')[1]}</td>\n                    <td>\n                      <button\n                        type=\"button\"\n                        data-testid=\"edit-btn\"\n                        onClick={ () => (\n                          this.setState({ curExpenses: cost }, () => showForm())) }\n                      >\n                        Editar despesa\n                      </button>\n                      <button\n                        data-testid=\"delete-btn\"\n                        onClick={ () => {\n                          deleteCost(id);\n                        } }\n                        type=\"button\"\n                      >\n                        X\n\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nTable.propTypes = {\n  costs: PropTypes.arrayOf(PropTypes.object).isRequired,\n  deleteCost: PropTypes.func.isRequired,\n  isFormEditOn: PropTypes.bool.isRequired,\n  showForm: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  costs: state.wallet.expenses,\n  isFormEditOn: state.wallet.editForm,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteCost: (id) => dispatch(removeCost(id)),\n  showForm: () => dispatch(showEditForm()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}